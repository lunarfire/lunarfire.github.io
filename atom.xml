<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[李德文的技术世界]]></title>
  <subtitle><![CDATA[宠辱不惊，闲看庭前花开花落；去留无意，漫随天外云卷云舒]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://lidewen.com/"/>
  <updated>2015-11-18T03:37:15.073Z</updated>
  <id>http://lidewen.com/</id>
  
  <author>
    <name><![CDATA[李德文]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hexo博客网站建立Sitemap和百度自动推送]]></title>
    <link href="http://lidewen.com/2015/11/18/Hexo-Sitemap-and-AutoPush/"/>
    <id>http://lidewen.com/2015/11/18/Hexo-Sitemap-and-AutoPush/</id>
    <published>2015-11-18T01:33:05.000Z</published>
    <updated>2015-11-18T03:37:15.073Z</updated>
    <content type="html"><![CDATA[<p>本文仅需三步即可建立Hexo博客网站的Sitemap和百度自动推送功能，实现了新增页面自动提交百度检索，从而提升该网站的博客文章被用户搜索、访问的机会和时效性。<br>以下是具体的操作步骤：<br><a id="more"></a></p>
<h1 id="1-_配置百度站长平台">1. 配置百度站长平台</h1><h2 id="1-1-_站点管理">1.1. 站点管理</h2><p>注册并登录 <a href="http://zhanzhang.baidu.com/" target="_blank" rel="external">百度站长平台</a> 后，需要输入Hexo博客网站域名，并进行网站验证。对于Hexo博客系统，由于站点html页面通常是系统自动生成的，不方便进行<code>文件验证</code>和<code>html标签验证</code>，此处推荐选择<code>CNAME验证</code>方式。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/Hexo_Retrieve_SiteVerify.png" alt=""></p>
<p>在博客网站域名对应的域名管理网站，按图中要求添加一条CNAME类型的域名解析规则即可。返回站长平台页面，完成验证。</p>
<h2 id="1-2-_链接提交">1.2. 链接提交</h2><p>百度提供了多种网站链接提交方式，其中sitemap方式和自动推送方式的自动化程度较高，能够减轻网站运营维护的负担，也是本文阐述的重点内容。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/Hexo_Retrieve_SitePush.png" alt=""></p>
<h1 id="2-_Sitemap方式提交">2. Sitemap方式提交</h1><p>顾名思义，Sitemap是网站的地图，通常以XML文件的形式提供给搜索引擎。该文件列出了网站中可供抓取的网页的链接地址，以及这些网页的元数据信息（比如上次更新的时间），从而方便搜索引擎进行抓取和收录。因此，Sitemap提交的核心步骤是Sitemap.xml文件的生成。</p>
<h2 id="2-1-_创建Sitemap文件">2.1. 创建Sitemap文件</h2><p>幸运的是，已经有现成的Sitemap文件生成工具可以轻松搞定，具体步骤如下：</p>
<ul>
<li><p>对于Windows平台，在本机切换到博客根目录下 (也即<code>hexo init</code>命令执行时对应的目录，下同)，运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>在本机博客根目录下的_config.yml文件的末尾添加：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>下次运行<code>hexo g</code>命令后，系统便会在博客根目录的public文件夹下自动生成sitemap.xml文件。该文件通过<code>hexo d</code>命令被部署到GitHub等托管网站，从而被百度搜索引擎访问到。<br>完成博客部署后，自己也可以在浏览器中通过 <code>&lt;你的域名地址&gt;/sitemap.xml</code> 访问并查看Sitemap文件的内容，从而确认sitemap.xml文件已存在。</p>
<h2 id="2-2-_提交Sitemap文件">2.2. 提交Sitemap文件</h2><p>回到站长平台的链接提交页面，在<code>自动提交</code> -&gt; <code>sitemap</code> 对应的文本编辑框中输入 <code>&lt;你的域名地址&gt;/sitemap.xml</code>，点击提交按钮后即完成了Sitemap文件的提交。百度搜索引擎会定期抓取该文件，从而获得博客网站中可供抓取的网页的链接地址。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/Hexo_Retrieve_SiteMap.png" alt=""></p>
<h1 id="3-_自动推送方式提交">3. 自动推送方式提交</h1><p>百度站长平台对自动推送方式的说明如下：</p>
<blockquote>
<p>自动推送JS代码是百度站长平台最新推出的轻量级链接提交组件，站长只需将自动推送的JS代码放置在站点每一个页面源代码中，当页面被访问时，页面链接会自动推送给百度，有利于新页面更快被百度发现。</p>
</blockquote>
<p>Hexo博客不同主题 (Theme) 的实现源代码有所不同，因此本文以yilia主题为例来说明如何添加自动推送JS代码。在本机 <code>&lt;博客根目录&gt;/themes/yilia/layout/_partial</code> 目录下打开article.ejs文件，定位到如下两段代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; theme.duoshuo &amp;&amp; post.comments)&#123; %&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'post/duoshuo'</span>, &#123;</span><br><span class="line">    key: post.slug,</span><br><span class="line">    title: post.title,</span><br><span class="line">    url: config.url+url_<span class="keyword">for</span>(post.path)</span><br><span class="line">  &#125;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>和<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</span><br><span class="line">&lt;section id=<span class="string">"comments"</span>&gt;</span><br><span class="line">  &lt;div id=<span class="string">"disqus_thread"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>在以上两段代码之间插入如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (!index)&#123; %&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    var bp = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">    bp.src = <span class="string">'//push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    var s = document.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;     </span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>即完成了新增博客文章页面（不包括其他页面）的自动推送方式提交。</p>
<hr>
<p>完成以上三步后，可以经常登录到百度站长平台，查看Hexo博客网站的链接提交情况：<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/Hexo_Retrieve_SiteQuote.png" alt=""><br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/Hexo_Retrieve_SitemapResult.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[本文仅需三步即可建立Hexo博客网站的Sitemap和百度自动推送功能，实现了新增页面自动提交百度检索，从而提升该网站的博客文章被用户搜索、访问的机会和时效性。]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://lidewen.com/tags/Hexo/"/>
    
      <category term="搜索" scheme="http://lidewen.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="推广" scheme="http://lidewen.com/categories/%E6%8E%A8%E5%B9%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio for Windows的安装与配置]]></title>
    <link href="http://lidewen.com/2015/11/14/Android-Studio-for-Windows%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://lidewen.com/2015/11/14/Android-Studio-for-Windows的安装与配置/</id>
    <published>2015-11-14T07:13:48.000Z</published>
    <updated>2015-11-14T16:42:29.906Z</updated>
    <content type="html"><![CDATA[<p>本文简要说明了Android Studio for Windows的下载、安装与配置要点。完成本文提供的步骤，即可正式开始Windows平台的Android编程之旅。<br><a id="more"></a></p>
<h1 id="1-_下载并配置Java环境">1. 下载并配置Java环境</h1><p>到 <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Oracle官网</a> 下载并安装最新版本Oracle Java Standard Edition (Java SE) 对应的JDK，然后配置环境变量 (系统变量，下同) <code>JAVA_HOME</code>为JDK安装目录 (通常为<code>C:\Program Files\Java\jdk1.x.x_xx</code>目录)，配置环境变量<code>CLASSPATH</code>为<code>.;%JAVA_HOME%\lib\tools.jar;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\bin;</code>。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_JavaEnvVar.png" alt=""></p>
<ul>
<li><p>据 <a href="http://stackoverflow.com/questions/23318109/is-it-possible-to-use-java-8-for-android-development" target="_blank" rel="external">StackOverflow的讨论</a>，在JDK 8环境中，Android Studio工程代码可以正常编译和运行，但是当使用JDK 8提供的新特性，比如Lambda表达式时，会导致编译失败。</p>
</li>
<li><p>在Android Studio安装页面中要求JDK 6或更高版本。而开发Android 5.0或更高版本的App时，则要求JDK 7或更高版本。</p>
</li>
</ul>
<h1 id="2-_下载并安装Android_Studio">2. 下载并安装Android Studio</h1><p>到 <a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android官网</a> 下载最新版本Android Studio安装文件，双击运行android-studio-bundle-xxx.xxxxxxx-windows.exe，配置Android Studio与Android SDK的安装目录后，一路Next，直到安装完成。撰写该节时的Android Studio最新版本为1.4.1。</p>
<h1 id="3-_配置Github_(可选)">3. 配置Github (可选)</h1><p>如果需要配置Github，则通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Version Control</code> -&gt; <code>Git</code>，填写git.exe的路径。如果安装Github for Windows时使用了默认位置，则git.exe的路径为 <code>C:\Users\&lt;username&gt;\AppData\Local\GitHub\PortableGit_&lt;numbersandletters&gt;\bin\git.exe</code>。填写完成后可以点击Test按钮，测试路径是否填写正确。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_Git.jpg" alt=""></p>
<p>然后选择菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Version Control</code> -&gt; <code>GitHub</code>，填写GitHub登录用户名和密码。填写完成后同样可以通过点击Test按钮进行测试。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_GitHub.jpg" alt=""></p>
<h1 id="4-_配置界面主题_(可选)">4. 配置界面主题 (可选)</h1><p>如果对Android Studio的界面默认风格IntelliJ不满意，可以通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Appearance &amp; Behavior</code> -&gt; <code>Appearance</code> 修改<code>Theme</code>。个人认为Darcula黑色主题比较炫酷，各位不妨体验一下。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_Theme.jpg" alt=""></p>
<h1 id="5-_配置字体与字号_(可选)">5. 配置字体与字号 (可选)</h1><h2 id="5-1-_代码编辑器">5.1. 代码编辑器</h2><p>代码编辑器中默认字体的字号比较小，编程时眼睛容易疲劳。为了使用合适的字号，可以通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>Colors &amp; Fonts</code> -&gt; <code>Font</code>修改<code>Editor Font</code>里的<code>Size</code>。默认字号是12，可以调整为14或更大。在调整字号之前必须在同一页面上方点击<code>Save As...</code>按钮保存当前设置，然后才能对字号、字体等进行修改。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_EditorFont.jpg" alt=""></p>
<h2 id="5-2-_左侧边栏和底栏">5.2. 左侧边栏和底栏</h2><p>完成对代码编辑器的字号修改后，还需要对Android Studio其他子窗口 (如左侧边栏和底栏) 的字号进行修改，否则不同子窗口中的字号不一致，会有不谐调感。通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Appearance &amp; Behavior</code> -&gt; <code>Appearance</code>页面中勾选<code>Override default fonts by:</code>文本前的复选框，并将<code>Size</code>调整为14 (与之前代码编辑器中的字号相同)。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_SideBarFont.jpg" alt=""></p>
<h2 id="5-3-_控制台">5.3. 控制台</h2><p>同时，通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>Colors &amp; Fonts</code> -&gt; <code>Console Font</code>修改控制台字号为14。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_ConsoleFont.jpg" alt=""></p>
<p>至于上述三处设置中的“字体”设置，个人均使用Consolas，保持整体效果的一致性。</p>
<h1 id="6-_配置文本编码规则_(推荐)">6. 配置文本编码规则 (推荐)</h1><p>由于手机显示的字符通常使用UTF-8编码，因此推荐修改编码规则，避免出现乱码。通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>File Encodings</code>页面，将<code>IDE Encoding</code>、<code>Project Encoding</code>、<code>Default encoding for properties files</code>对应的下拉框内容选择为UTF-8，并勾选<code>Default encoding for properties files</code>后面<code>Transparent native-to-ascii conversion</code>对应的复选框，完成字符编码设置。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_Encoding.jpg" alt=""></p>
<h1 id="7-_配置自动导包功能_(推荐)">7. 配置自动导包功能 (推荐)</h1><p>自动导包对于Java开发者而言是一项非常便利的功能，可以在开发者使用其他package中的类时，自动添加对应的import语句。通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>General</code> -&gt; <code>Auto Import</code>页面，勾选<code>Java</code>栏下方的<code>Optimize imports on the fly</code>和<code>Add unambiguous imports on the fly</code>对应的复选框，自动导包功能就设置好了。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_AutoImport.jpg" alt=""></p>
<h1 id="8-_显示行号和方法分隔线_(推荐)">8. 显示行号和方法分隔线 (推荐)</h1><p>显示行号和方法分隔线可以方便阅读代码。通过菜单<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>General</code> -&gt; <code>Appearance</code>页面，勾选<code>Show line numbers</code>和<code>Show method separators</code>对应的复选框，完成设置。由于个人不大习惯方法分隔线，因此仅设置“显示行号”。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_LineNum.jpg" alt=""></p>
<h1 id="9-_生成存取方法时忽略前缀_(可选)">9. 生成存取方法时忽略前缀 (可选)</h1><p>如果在Android开发中使用m前缀来命名普通成员变量，使用s前缀来命名静态成员变量，则在生成变量的getter/setter方法时，可以在自动生成的方法名中忽略这些前缀。例如，对于成员变量<code>mDate</code>，如果不进行设置，则生成的getter方法将是<code>getmDate</code>，而设置后则生成正常的<code>getDate</code>。通过<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Editor</code> -&gt; <code>Code Style</code> -&gt; <code>Java</code>页面，点击<code>Code Generation</code>选项卡，在<code>Field</code>一栏对应的<code>Name prefix</code>编辑框中填写m，在<code>Static field</code>一栏对应的<code>Name prefix</code>编辑框中填写s，即完成设置。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_OmitPrefix.jpg" alt=""></p>
<h1 id="10-_设备调试设置">10. 设备调试设置</h1><p>完成App程序编写后，需运行查看效果，此时可以使用Android模拟器或真机进行调试。如果使用模拟器，则点击右上方的<code>AVD Manager</code>按钮，在弹出的窗口中点击<code>Create Virtual Device</code>，依次选择硬件机型，系统版本，点击Finish后即完成一台虚拟设备的创建。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_Emulator.jpg" alt=""></p>
<p>随后点击下图中<code>Edit Configurations...</code>选项<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_EditConfig.jpg" alt=""></p>
<p>在弹出的窗口中<code>Target Device</code>一栏如果选择<code>Show chooser dialog</code>，则调试运行程序时会弹出选择窗口，让开发者选择使用模拟器或者真机设备。而如果选择<code>USB device</code>，则调试运行程序时始终使用USB连接的真机设备进行调试。<br><img src="http://7xo7cn.com1.z0.glb.clouddn.com/AS_Setup_Config.jpg" alt=""></p>
<h1 id="11-_更多">11. 更多</h1><p>以上是个人的经验记录，更为全面的Android Studio设置教程参见 <a href="http://www.licheedev.com/2015/05/02/android-studio-settings/" target="_blank" rel="external">LicheeDev-某黎的博客</a>。</p>
<h1 id="12-_致谢">12. 致谢</h1><p>本文撰写过程中主要参考了以下博客的内容，向两位博主表示衷心的感谢。</p>
<ul>
<li><a href="http://www.licheedev.com/2015/05/02/android-studio-settings/" target="_blank" rel="external">LicheeDev-某黎的博客</a></li>
<li><a href="http://stormzhang.com/devtools/2014/11/28/android-studio-tutorial2/" target="_blank" rel="external">stormzhang的博客</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[本文简要说明了Android Studio for Windows的下载、安装与配置要点。完成本文提供的步骤，即可正式开始Windows平台的Android编程之旅。]]>
    
    </summary>
    
      <category term="Android" scheme="http://lidewen.com/tags/Android/"/>
    
      <category term="技术" scheme="http://lidewen.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Android" scheme="http://lidewen.com/categories/Android/"/>
    
  </entry>
  
</feed>
